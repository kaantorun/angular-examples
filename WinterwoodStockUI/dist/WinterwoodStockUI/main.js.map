{"version":3,"sources":["./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/_helpers/fake-backend.ts","./src/app/batch/index/index.component.html","./src/app/batch/index/index.component.ts","./src/app/_services/index.ts","./src/app/batch/stock/stock.component.html","./src/app/batch/stock/stock.component.ts","./src/app/_components/alert.component.html","./src/app/_components/alert.component.ts","./src/app/login/index.ts","./src/app/_services/batch.service.ts","./src/app/_components/index.ts","./src/app/batch/edit/edit.component.ts","./src/app/batch/edit/edit.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/batch/view/view.component.ts","./src/app/batch/view/view.component.html","./src/app/_services/user.service.ts","./src/app/_helpers/index.ts","./src/app/app.module.ts","./src/app/_services/alert.service.ts","./src/polyfills.ts","./src/app/_content/app.less","./src/app/_helpers/jwt.interceptor.ts","./src/app/register/index.ts","./src/app/_helpers/error.interceptor.ts","./src/app/_helpers/auth.guard.ts","./src/app/_services/authentication.service.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/home/index.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/batch/create/create.component.ts","./src/app/batch/create/create.component.html"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {catchError, first} from 'rxjs/operators';\n\nimport { AlertService, } from '../_services/alert.service';\nimport { UserService } from '../_services/user.service';\nimport { AuthenticationService } from '../_services/authentication.service';\n\nimport {Alert} from \"../_components/alert.model\";\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  // @ts-ignore\n  registerForm: FormGroup;\n\n  loading = false;\n  submitted = false;\n  // @ts-ignore\n  alert: Alert;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private authenticationService: AuthenticationService,\n    private userService: UserService,\n    private alertService: AlertService\n  ) {\n    // redirect to home if already logged in\n    if (this.authenticationService.currentUserValue) {\n      this.router.navigate(['/']);\n    }\n  }\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      username: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.registerForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n\n    // reset alerts on submit\n    this.alertService.clear();\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n\n    this.userService.registerAuth(this.registerForm.value)\n      .subscribe(\n        user => {\n\n          //success\n          if(user.status == 0 ){\n            this.alertService.success('Registration successful', true);\n            this.router.navigate(['/login']);\n          }else {\n            this.alertService.success(user.message, false);\n            this.loading = false;\n          }\n        },\n        error => {\n          this.alertService.handleError(error);\n          this.loading = false;\n        });\n  }\n}\n","<h2>Register</h2>\n<form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"form-group\">\n    <label for=\"firstName\">First Name</label>\n    <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\n    <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\n      <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"lastName\">Last Name</label>\n    <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\n    <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\n      <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"username\">Username</label>\n    <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n    <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n      <div *ngIf=\"f.username.errors.required\">Username is required</div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"password\">Password</label>\n    <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n    <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n      <div *ngIf=\"f.password.errors.required\">Password is required</div>\n      <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <button [disabled]=\"loading\" class=\"btn btn-primary\">\n      <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n      Register\n    </button>\n    <a routerLink=\"/login\" class=\"btn btn-link\">Cancel</a>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\n\nimport { User } from '../_models/';\nimport { UserService } from '../_services/user.service';\nimport { AuthenticationService } from '../_services/authentication.service';\nimport {AlertService} from \"../_services\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  currentUser: User;\n  users: User[] = [];\n\n  constructor(\n    private authenticationService: AuthenticationService,\n    private userService: UserService,\n    private alertService: AlertService,\n    private router: Router\n  ) {\n    this.currentUser = this.authenticationService.currentUserValue;\n  }\n\n  ngOnInit() {\n    if(!this.authenticationService.isUserLoggedId())\n    {\n      this.alertService.error('Unauthorized page!, You must login to see the content!', false);\n      this.router.navigate(['/login']);\n    }\n  }\n}\n","<h1>Hi {{currentUser.firstName}} {{currentUser.lastName}}!</h1>\n<p>Welcome to Winterwood Stock System</p>\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { delay, mergeMap, materialize, dematerialize } from 'rxjs/operators';\nimport {User} from \"../_models\";\n\n// array in local storage for registered users\n// @ts-ignore\nlet users = JSON.parse(localStorage.getItem('users')) || [];\n\n@Injectable()\nexport class FakeBackendInterceptor implements HttpInterceptor {\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const { url, method, headers, body } = request;\n\n    // wrap in delayed observable to simulate server api call\n    return of(null)\n      .pipe(mergeMap(handleRoute))\n      .pipe(materialize()) // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\n      .pipe(delay(500))\n      .pipe(dematerialize());\n\n    function handleRoute() {\n      switch (true) {\n        case url.endsWith('/users/authenticate') && method === 'POST':\n          return authenticate();\n        case url.endsWith('/users/register') && method === 'POST':\n          return register();\n        case url.endsWith('/users') && method === 'GET':\n          return getUsers();\n        case url.endsWith('/GetAllStock/'):\n        case url.endsWith('/GetAllBatch/'):\n          if (!isLoggedIn()) return unauthorized();\n          return next.handle(request);\n        default:\n          // pass through any requests not handled above\n          return next.handle(request);\n      }\n    }\n\n    // route functions\n\n    function authenticate() {\n      const { username, password } = body;\n\n      // @ts-ignore\n      users = JSON.parse(localStorage.getItem('users')) || [];\n      // @ts-ignore\n      const user = users.find(x => x.username === username && x.password === password);\n      if (!user) return error('Username or password is incorrect');\n      return ok({\n        id: user.id,\n        username: user.username,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        token: user.token,\n        status: user.status,\n        message: user.message\n      })\n    }\n\n    function register() {\n      return ok();\n    }\n\n    function getUsers() {\n      if (!isLoggedIn()) return unauthorized();\n      return ok(users);\n    }\n\n    function deleteUser() {\n      if (!isLoggedIn()) return unauthorized();\n\n      // @ts-ignore\n      users = users.filter(x => x.id !== idFromUrl());\n      localStorage.setItem('users', JSON.stringify(users));\n      return ok();\n    }\n\n    // helper functions\n\n    // @ts-ignore\n    function ok(body?) {\n      return of(new HttpResponse({ status: 200, body }))\n    }\n\n    // @ts-ignore\n    function error(message) {\n      return throwError({ error: { message } });\n    }\n\n    function unauthorized() {\n      return throwError({ status: 401, error: { message: 'Unauthorised' } });\n    }\n\n    function isLoggedIn() {\n\n      console.log(headers.get('Authorization'));\n      return headers.get('Authorization');\n    }\n\n    function idFromUrl() {\n      const urlParts = url.split('/');\n      return parseInt(urlParts[urlParts.length - 1]);\n    }\n  }\n}\n\nexport const fakeBackendProvider = {\n  // use fake backend in place of Http service for backend-less development\n  provide: HTTP_INTERCEPTORS,\n  useClass: FakeBackendInterceptor,\n  multi: true\n};\n","<div class=\"container\">\n  <h1>Winterwood Batches</h1>\n\n  <a href=\"#\" routerLink=\"/batch/create/\" class=\"btn btn-success\">Create New Batch</a>\n\n  <table class=\"table table-bordered\">\n    <tr>\n      <th>Batch Id</th>\n      <th>Fruit Type</th>\n      <th>Variety Type</th>\n      <th>Quantity</th>\n      <th>Action</th>\n    </tr>\n\n    <tr *ngFor=\"let batch of batches\">\n      <td>{{ batch.batchId }}</td>\n      <td>{{ batch.fruitType }}</td>\n      <td>{{ batch.varietyType }}</td>\n      <td>{{ batch.quantity }}</td>\n      <td>\n        <a href=\"#\" [routerLink]=\"['/batch/', batch.batchId, 'view']\" class=\"btn btn-info\">View</a> |\n        <a href=\"#\" [routerLink]=\"['/batch/', batch.batchId, 'edit']\" class=\"btn btn-primary\">Edit</a> |\n        <button type=\"button\" (click)=\"deleteBatch(batch.batchId)\" class=\"btn btn-danger\">Delete</button>\n      </td>\n    </tr>\n  </table>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {Batch} from 'src/app/_models/batch';\nimport {BatchService} from 'src/app/_services/batch.service';\nimport {User} from \"../../_models\";\nimport {Router} from \"@angular/router\";\nimport {AuthenticationService} from \"../../_services\";\nimport { AlertService, } from 'src/app/_services/alert.service';\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.css']\n})\nexport class IndexComponent implements OnInit {\n  currentUser: User;\n  batches: Batch[] = [];\n\n  constructor(public batchService: BatchService,\n              private authenticationService: AuthenticationService,\n              private alertService: AlertService,\n              private router: Router,\n  ) {\n    this.currentUser = this.authenticationService.currentUserValue;\n  }\n\n  ngOnInit(): void {\n\n    if(!this.authenticationService.isUserLoggedId())\n    {\n      this.alertService.error('Unauthorized page!, You must login to see the content!', true);\n      this.router.navigate(['/login']);\n    }\n    else {\n      this.batchService.getAll().subscribe((data: Batch[]) => {\n        this.batches = data;\n        console.log(this.batches);\n      });\n    }\n  }\n\n  deleteBatch(id: number) {\n    this.batchService.delete(id).subscribe(res => {\n      this.batches = this.batches.filter(item => item.batchId !== id);\n      console.log('Batch deleted successfully!');\n    });\n  }\n\n}\n","export * from './alert.service';\nexport * from './authentication.service';\nexport * from './user.service';","\n<div class=\"container\">\n  <h1>Winterwood Stocks View</h1>\n\n  <table class=\"table table-bordered\">\n    <tr>\n      <th>Batch Id</th>\n      <th>Fruit Type</th>\n      <th>Variety Type</th>\n      <th>Quantity</th>\n    </tr>\n\n    <tr *ngFor=\"let stock of stocks\">\n      <td>{{ stock.stockId }}</td>\n      <td>{{ stock.fruitType }}</td>\n      <td>{{ stock.varietyType }}</td>\n      <td>{{ stock.quantity }}</td>\n    </tr>\n  </table>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {Stock} from 'src/app/_models/stock';\nimport {BatchService} from 'src/app/_services/batch.service';\nimport {AuthenticationService} from \"../../_services\";\nimport {User} from \"../../_models\";\nimport { AlertService, } from 'src/app/_services/alert.service';\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './stock.component.html',\n  styleUrls: ['./stock.component.css']\n})\nexport class StockComponent implements OnInit {\n  currentUser: User;\n  stocks: Stock[] = [];\n\n  constructor(public batchService: BatchService,\n              private authenticationService: AuthenticationService,\n              private alertService: AlertService,\n              private router: Router) {\n  this.currentUser = this.authenticationService.currentUserValue;\n}\n\n  ngOnInit(): void {\n    if(!this.authenticationService.isUserLoggedId())\n    {\n      this.alertService.error('Unauthorized page!, You must login to see the content!', false);\n      this.router.navigate(['/login']);\n    }\n    else {\n      this.batchService.getAllStock().subscribe((data: Stock[]) => {\n        this.stocks = data;\n        console.log(this.stocks);\n      });\n    }\n  }\n}\n","<div *ngIf=\"message\" [ngClass]=\"message.cssClass\">{{message.text}}</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { AlertService } from '../_services';\n\n@Component({ selector: 'alert', templateUrl: 'alert.component.html' })\nexport class AlertComponent implements OnInit, OnDestroy {\n  // @ts-ignore\n  private subscription: Subscription;\n  message: any;\n\n  constructor(private alertService: AlertService) { }\n\n  ngOnInit() {\n    this.subscription = this.alertService.getAlert()\n      .subscribe(message => {\n        switch (message && message.type) {\n          case 'success':\n            message.cssClass = 'alert alert-success';\n            break;\n          case 'error':\n            message.cssClass = 'alert alert-danger';\n            break;\n        }\n\n        this.message = message;\n      });\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","export * from './login.component';","import {Injectable} from '@angular/core';\nimport {HttpHeaders} from '@angular/common/http';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable, of} from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport {Batch} from '../_models/batch';\nimport {Stock} from '../_models/stock';\n\nimport {throwError} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BatchService {\n  apiURL = 'https://winterwoodapi.azurewebsites.net/WinterwoodStock';\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  };\n\n  constructor(private httpClient: HttpClient) {\n  }\n\n  getAll(): Observable<Batch[]> {\n    return this.httpClient.get<Batch[]>(this.apiURL + '/GetAllBatch/')\n      .pipe(\n        catchError(this.errorHandler)\n      );\n  }\n\n  getAllStock(): Observable<Stock[]> {\n    return this.httpClient.get<Stock[]>(this.apiURL + '/GetAllStock/')\n      .pipe(\n        catchError(this.errorHandler)\n      );\n  }\n\n  create(batch: any): Observable<Batch> {\n    return this.httpClient.post<Batch>(this.apiURL, JSON.stringify(batch), this.httpOptions)\n      .pipe(\n        catchError(this.errorHandler)\n      );\n  }\n\n  find(batchId: number): Observable<Batch> {\n    return this.httpClient.post<Batch>(this.apiURL + '/GetBatchById?batchId=' + batchId, this.httpOptions)\n      .pipe(\n        catchError(this.errorHandler)\n      );\n  }\n\n  update(batch: any): Observable<Batch> {\n    return this.httpClient.put<Batch>(this.apiURL, JSON.stringify(batch), this.httpOptions)\n      .pipe(\n        catchError(this.errorHandler)\n      );\n  }\n\n  delete(batchId: number) {\n    return this.httpClient.delete<Batch>(this.apiURL + '?batchId=' + batchId, this.httpOptions)\n      .pipe(\n        catchError(this.errorHandler)\n      );\n  }\n\n  errorHandler(error: any) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    } else {\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(errorMessage);\n  }\n}\n","export * from './alert.component';","import {Component, OnInit} from '@angular/core';\nimport {BatchService} from 'src/app/_services/batch.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Batch} from 'src/app/_models/batch';\nimport {FormGroup, FormControl, Validators} from '@angular/forms';\nimport {User} from \"../../_models\";\nimport {AuthenticationService} from \"../../_services\";\nimport { AlertService } from 'src/app/_services/alert.service';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n  currentUser: User;\n  batchId = this.route.snapshot.params['batchId'];\n  // @ts-ignore\n  batch: Batch;\n  form = new FormGroup({\n    batchId: new FormControl('', Validators.required),\n    fruitType: new FormControl('', Validators.required),\n    varietyType: new FormControl('', Validators.required),\n    quantity: new FormControl('', Validators.required),\n  });\n\n  constructor(\n    public batchService: BatchService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authenticationService: AuthenticationService,\n    private alertService: AlertService\n  ) {\n    this.currentUser = this.authenticationService.currentUserValue;\n  }\n\n  ngOnInit(): void {\n    if(!this.authenticationService.isUserLoggedId())\n    {\n      this.alertService.error('Unauthorized page!, You must login to see the content!', false);\n      this.router.navigate(['/login']);\n    }\n    else {\n      this.batchService.find(this.batchId).subscribe((data: Batch) => {\n        this.batch = data;\n      });\n    }\n  }\n\n  get f() {\n    return this.form.controls;\n  }\n\n  submit() {\n    console.log(this.form.value);\n    this.batchService.update(this.form.value).subscribe(res => {\n      console.log('Batch updated successfully!');\n      this.alertService.success('Batch updated successfully!', true);\n      this.router.navigateByUrl('batch/index');\n    });\n  }\n}\n","<div class=\"container\">\n  <h1>Update Batch</h1>\n\n  <a href=\"#\" routerLink=\"/batch/index\" class=\"btn btn-primary\">Back</a>\n\n  <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n\n    <div class=\"form-group\">\n      <label for=\"batchId\">Batch Id:</label>\n      <input\n        formControlName=\"batchId\"\n        id=\"batchId\"\n        type=\"text\"\n        [readOnly]=\"true\"\n        [(ngModel)]=\"batch.batchId\"\n        class=\"form-control\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"fruitType\">Fruit Type:</label>\n      <input\n        formControlName=\"fruitType\"\n        id=\"fruitType\"\n        type=\"text\"\n        [readOnly]=\"true\"\n        [(ngModel)]=\"batch.fruitType\"\n        class=\"form-control\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"varietyType\">Variety Type:</label>\n      <input\n        formControlName=\"varietyType\"\n        id=\"varietyType\"\n        type=\"text\"\n        [readOnly]=\"true\"\n        [(ngModel)]=\"batch.varietyType\"\n        class=\"form-control\">\n\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"quantity\">Quantity:</label>\n      <input\n        formControlName=\"quantity\"\n        id=\"quantity\"\n        type=\"number\"\n        [(ngModel)]=\"batch.quantity\"\n        class=\"form-control\">\n      <div *ngIf=\"f.quantity.touched && f.quantity.invalid\" class=\"alert alert-danger\">\n        <div *ngIf=\"f.quantity.errors\">Quantity is required.</div>\n      </div>\n    </div>\n\n    <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"!form.valid\">Update</button>\n  </form>\n</div>\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthenticationService } from './_services/authentication.service';\nimport { User } from './_models';\n\nimport './_content/app.less';\n\n\n@Component({ selector: 'app', templateUrl: 'app.component.html' })\nexport class AppComponent {\n  // @ts-ignore\n  currentUser: User;\n  title = 'WinterwoodStockUI';\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n  }\n\n  logout() {\n    this.authenticationService.logout();\n    this.router.navigate(['/login']);\n  }\n}\n","<!-- nav -->\n<nav class=\"navbar navbar-expand navbar-dark bg-dark\" *ngIf=\"currentUser\">\n  <div class=\"navbar-nav\">\n    <a class=\"nav-item nav-link\" routerLink=\"/\">Home</a>\n    <a class=\"nav-item nav-link\" routerLink=\"/batch/create\">Create Batch</a>\n    <a class=\"nav-item nav-link\" routerLink=\"batch/index\">View All Batches</a>\n    <a class=\"nav-item nav-link\" routerLink=\"batch/stock\">View All Stocks</a>\n    <a class=\"nav-item nav-link\" (click)=\"logout()\">Logout</a>\n  </div>\n</nav>\n\n<!-- main app container -->\n<div class=\"jumbotron\">\n  <div class=\"container\">\n    <!-- div class=\"row\">\n      <div class=\"col-sm-6 offset-sm-3\">\n\n      </div>\n    </div -->\n    <alert></alert>\n    <router-outlet></router-outlet>\n  </div>\n</div>\n\n<!-- credits -->\n<div class=\"text-center\">\n  <p>\n    <a href=\"https://www.winterwood.co.uk/\" target=\"_top\">winterwood.co.uk</a>\n  </p>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {BatchService} from 'src/app/_services/batch.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Batch} from 'src/app/_models/batch';\nimport {AlertService, AuthenticationService, UserService} from \"../../_services\";\nimport {User} from \"../../_models\";\n\n@Component({\n  selector: 'app-view',\n  templateUrl: './view.component.html',\n  styleUrls: ['./view.component.css']\n})\nexport class ViewComponent implements OnInit {\n  currentUser: User;\n  firstName = '';\n  batchId = this.route.snapshot.params['batchId'];\n  // @ts-ignore\n  batch: Batch;\n\n\n  constructor(\n    public batchService: BatchService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private alertService: AlertService,\n    private authenticationService: AuthenticationService\n  ) {\n    this.currentUser = this.authenticationService.currentUserValue;\n  }\n\n  ngOnInit(): void {\n    if(!this.authenticationService.isUserLoggedId())\n    {\n      this.alertService.error('Unauthorized page!, You must login to see the content!', false);\n      this.router.navigate(['/login']);\n    }\n    else {\n      this.batchService.find(this.batchId).subscribe((data: Batch) => {\n        this.batch = data;\n      });\n    }\n  }\n\n}\n","<div class=\"container\">\n  <h1>View Batch</h1>\n\n  <a href=\"#\" routerLink=\"/batch/index\" class=\"btn btn-primary\">Back</a>\n\n  <div>\n    <strong>Batch Id:</strong>\n    <p>{{ batch.batchId }}</p>\n  </div>\n\n  <div>\n    <strong>Fruit Type:</strong>\n    <p>{{ batch.fruitType }}</p>\n  </div>\n\n  <div>\n    <strong>Variety Type:</strong>\n    <p>{{ batch.varietyType }}</p>\n  </div>\n\n  <div>\n    <strong>Quantity</strong>\n    <p>{{ batch.quantity }}</p>\n  </div>\n\n</div>\n","import { Injectable } from '@angular/core';\n\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\nimport { User } from '../_models';\nimport {Observable, throwError} from \"rxjs\";\nimport {catchError, first} from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  apiURL = 'https://winterwoodapi.azurewebsites.net/WinterwoodStock';\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  };\n\n  constructor(private httpClient: HttpClient) { }\n\n  registerAuth(user: User): Observable<User> {\n    return this.httpClient.post<User>(`${this.apiURL}/Auth/registerauth`, JSON.stringify(user), this.httpOptions);\n  }\n\n  register(user: any): Observable<User> {\n    return this.httpClient.post<any>(`${this.apiURL}/users/register`, JSON.stringify(user), this.httpOptions);\n  }\n\n  delete(id: number) {\n    return this.httpClient.delete(`${config.apiUrl}/users/${id}`);\n  }\n}\n","export * from './auth.guard';\nexport * from './error.interceptor';\nexport * from './jwt.interceptor';\nexport * from './fake-backend';","import { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { appRoutingModule } from './app-routing.module';\n\n// used to create fake backend\nimport { fakeBackendProvider } from './_helpers';\n\nimport { JwtInterceptor, ErrorInterceptor } from './_helpers';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home';\nimport { LoginComponent } from './login';\nimport { RegisterComponent } from './register';\nimport { AlertComponent } from './_components';\nimport { IndexComponent } from 'src/app/batch/index/index.component';\nimport { ViewComponent } from 'src/app/batch/view/view.component';\nimport { CreateComponent } from 'src/app/batch/create/create.component';\nimport { EditComponent } from 'src/app/batch/edit/edit.component';\nimport {StockComponent} from \"./batch/stock/stock.component\";\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    RegisterComponent,\n    AlertComponent,\n    IndexComponent,\n    ViewComponent,\n    CreateComponent,\n    EditComponent,\n    StockComponent\n  ],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\n    ReactiveFormsModule,\n    HttpClientModule,\n    appRoutingModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n\n    // provider used to create fake backend\n    fakeBackendProvider\n  ],\n  bootstrap: [AppComponent],\n  schemas: [\n    NO_ERRORS_SCHEMA\n  ]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport {HttpErrorResponse} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n  private subject = new Subject<any>();\n  private keepAfterRouteChange = false;\n\n  constructor(private router: Router) {\n    // clear alert messages on route change unless 'keepAfterRouteChange' flag is true\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationStart) {\n        if (this.keepAfterRouteChange) {\n          // only keep for a single route change\n          this.keepAfterRouteChange = false;\n        } else {\n          // clear alert message\n          this.clear();\n        }\n      }\n    });\n  }\n\n  public handleError = (error: HttpErrorResponse) => {\n    if(error.status === 500){\n      this.handle500Error(error);\n    }\n    else if(error.status === 404){\n      this.handle404Error(error)\n    }\n    else{\n      this.handleOtherError(error);\n    }\n  }\n\n  private handle500Error = (error: HttpErrorResponse) => {\n    this.createErrorMessage(error);\n  }\n\n  private handle404Error = (error: HttpErrorResponse) => {\n    this.createErrorMessage(error);\n  }\n\n  private handleOtherError = (error: HttpErrorResponse) => {\n    this.createErrorMessage(error);\n  }\n\n  private createErrorMessage = (error: HttpErrorResponse) => {\n    this.error((error.error ? error.error : error.statusText), false);\n  }\n\n  getAlert(): Observable<any> {\n    return this.subject.asObservable();\n  }\n\n  success(message: string, keepAfterRouteChange = false) {\n    this.keepAfterRouteChange = keepAfterRouteChange;\n    this.subject.next({ type: 'success', text: message });\n  }\n\n  error(message: string, keepAfterRouteChange = false) {\n    this.keepAfterRouteChange = keepAfterRouteChange;\n    this.subject.next({ type: 'error', text: message });\n  }\n\n  clear() {\n    // clear by calling subject.next() without parameters\n    this.subject.next();\n  }\n}\n","import 'core-js/features/reflect';\nimport 'zone.js/dist/zone';\n","export default \"a {\\n  cursor: pointer;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0ksZUFBQTtBQUFKIiwiZmlsZSI6ImFwcC5sZXNzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZ2xvYmFsIGFwcGxpY2F0aW9uIHN0eWxlc1xuYSB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xufSJdfQ== */\";","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { AuthenticationService } from '../_services/authentication.service';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) {}\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // add authorization header with jwt token if available\n        let currentUser = this.authenticationService.currentUserValue;\n        if (currentUser && currentUser.token) {\n            request = request.clone({\n                setHeaders: {\n                    Authorization: `Bearer ${currentUser.token}`\n                }\n            });\n        }\n\n        return next.handle(request);\n    }\n}\n","export * from './register.component';","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AuthenticationService } from '../_services/authentication.service';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) {}\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError(err => {\n            if (err.status === 401) {\n                // auto logout if 401 response returned from api\n                this.authenticationService.logout();\n                location.reload(true);\n            }\n\n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }))\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { AuthenticationService } from '../_services/authentication.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const currentUser = this.authenticationService.currentUserValue;\n        if (currentUser) {\n            // authorised so return true\n            return true;\n        }\n\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\n        return false;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {BehaviorSubject, Observable, throwError} from 'rxjs';\nimport {catchError, map} from 'rxjs/operators';\n\nimport { User } from '../_models';\nimport { AlertService, } from '../_services/alert.service';\nimport {Router} from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  private currentUserSubject: BehaviorSubject<User>;\n  public currentUser: Observable<User>;\n\n  apiURL = 'https://winterwoodapi.azurewebsites.net/WinterwoodStock';\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  };\n\n  constructor(private http: HttpClient,\n              private alertService: AlertService,\n              private router: Router) {\n    // @ts-ignore\n    this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): User {\n    return this.currentUserSubject.value;\n  }\n\n  public isUserLoggedId(): boolean {\n    if(this.currentUser == null)\n    {\n      this.alertService.error('Unauthorized page!, You must login to see the content!', false);\n      this.router.navigate(['/login']);\n\n      return false;\n    }\n    return true;\n  }\n\n  loginAuth(username: any, password: any) {\n    return this.http.post<any>(`${this.apiURL}/Auth/authenticate`,{Username: username,Password: password})\n      .pipe(map(data => {\n\n        // Convert to JSON\n        let stringifiedData = JSON.stringify(data);\n        console.log(\"With Stringify :\" , stringifiedData);\n\n        let jsonObject: any = JSON.parse(stringifiedData);\n        let user = <User>jsonObject;\n\n        if(user.id > 0)\n        {\n          let userss = [user];\n          localStorage.setItem('users', JSON.stringify(userss));\n        }\n\n        return user;\n\n      }),catchError(this.errorHandler));\n  }\n\n  login(username: any, password: any) {\n    //return this.http.post<any>(`${this.apiURL}/Auth`,{Username: username,Password: password})\n      return this.http.post<any>(`${this.apiURL}/users/authenticate`, { username, password })\n      .pipe(map(user => {\n        //this.http.post<any>(`${this.apiURL}/users/authenticate`, { username, password });\n        // store user details and jwt token in local storage to keep user logged in between page refreshes\n        localStorage.setItem('currentUser', JSON.stringify(user));\n        this.currentUserSubject.next(user);\n        return user;\n      }));\n  }\n\n  logout() {\n    // remove user from local storage and set current user to null\n\n    localStorage.removeItem('currentUser');\n    localStorage.clear();\n    // @ts-ignore\n    this.currentUserSubject.next(null);\n\n    this.alertService.success('You have successfully logged out!', true);\n  }\n\n  errorHandler(error: any) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      errorMessage = error.error.message;\n    } else {\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(errorMessage);\n  }\n}\n","import { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AuthGuard } from './_helpers';\nimport {IndexComponent} from \"./batch/index/index.component\";\nimport {StockComponent} from \"./batch/stock/stock.component\";\nimport {ViewComponent} from \"./batch/view/view.component\";\nimport {CreateComponent} from \"./batch/create/create.component\";\nimport {EditComponent} from \"./batch/edit/edit.component\";\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent, canActivate: [AuthGuard] },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'batch/index', component: IndexComponent },\n  { path: 'batch/stock', component: StockComponent },\n  { path: 'batch/:batchId/view', component: ViewComponent },\n  { path: 'batch/create', component: CreateComponent },\n  { path: 'batch/:batchId/edit', component: EditComponent },\n  // otherwise redirect to home\n  { path: '**', redirectTo: '' }\n];\n\nexport const appRoutingModule = RouterModule.forRoot(routes);\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AlertService } from '../_services/alert.service';\nimport {  AuthenticationService } from '../_services/authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  options = {\n    autoClose: false,\n    keepAfterRouteChange: false\n  };\n  // @ts-ignore\n  loginForm: FormGroup;\n  loading = false;\n  submitted = false;\n  // @ts-ignore\n  returnUrl: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authenticationService: AuthenticationService,\n    public alertService: AlertService\n  ) {\n    // redirect to home if already logged in\n    if (this.authenticationService.currentUserValue) {\n      this.router.navigate(['/']);\n    }\n  }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.loginForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n\n    // reset alerts on submit\n    this.alertService.clear();\n\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n\n    this.authenticationService.loginAuth(this.f.username.value, this.f.password.value)\n      .subscribe(\n        user => {\n\n          if(user.status == 0)\n          {\n            this.authenticationService.login(this.f.username.value, this.f.password.value)\n              .pipe(first())\n              .subscribe(\n                data => {\n                  this.router.navigate([this.returnUrl]);\n                },\n                error => {\n                  this.alertService.error(error);\n                  this.loading = false;\n                })\n          }\n          else\n            {\n              this.alertService.success(user.message, false);\n              this.loading = false;\n            }\n        },\n        error => {\n          this.alertService.error(error);\n          this.loading = false;\n        });\n  }\n}\n\n","<h2>Login</h2>\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"form-group\">\n    <label for=\"username\">Username</label>\n    <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n    <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n      <div *ngIf=\"f.username.errors.required\">Username is required</div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"password\">Password</label>\n    <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n    <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n      <div *ngIf=\"f.password.errors.required\">Password is required</div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <button [disabled]=\"loading\" class=\"btn btn-primary\">\n      <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n      Login\n    </button>\n    <a routerLink=\"/register\" class=\"btn btn-link\">Register</a>\n  </div>\n</form>\n\n","export * from './home.component';","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport './polyfills';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import {Component, OnInit} from '@angular/core';\nimport {BatchService} from 'src/app/_services/batch.service';\nimport {Router} from '@angular/router';\nimport {FormGroup, FormControl, Validators} from '@angular/forms';\nimport {User} from \"../../_models\";\nimport {AuthenticationService} from \"../../_services\";\nimport { AlertService } from 'src/app/_services/alert.service';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n  // @ts-ignore\n  currentUser: User;\n  form = new FormGroup({\n    fruitType: new FormControl('', Validators.required),\n    varietyType: new FormControl('', Validators.required),\n    quantity: new FormControl('', Validators.required),\n  });\n\n  constructor(\n    public batchService: BatchService,\n    private router: Router,\n    private authenticationService: AuthenticationService,\n    private alertService: AlertService\n  ) {\n    this.currentUser = this.authenticationService.currentUserValue;\n  }\n\n  ngOnInit(): void {\n    if(this.currentUser == null)\n    {\n      this.alertService.error('Unauthorized page!, You must login to see the content!', false);\n      this.router.navigate(['/login']);\n    }\n  }\n\n  get f() {\n    return this.form.controls;\n  }\n\n  submit() {\n    console.log(this.form.value);\n    this.batchService.create(this.form.value).subscribe(res => {\n      console.log('Batch created successfully!');\n      this.alertService.success('Batch created successfully!', true);\n      this.router.navigateByUrl('batch/index');\n    });\n  }\n\n}\n","<div class=\"container\">\n  <h1>Create New Batch</h1>\n\n  <a href=\"#\" routerLink=\"/batch/index\" class=\"btn btn-primary\">Back</a>\n\n  <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n\n    <div class=\"form-group\">\n      <label for=\"fruitType\">Fruit Type:</label>\n      <input\n        formControlName=\"fruitType\"\n        id=\"fruitType\"\n        type=\"text\"\n        class=\"form-control\">\n      <div *ngIf=\"f.fruitType.touched && f.fruitType.invalid\" class=\"alert alert-danger\">\n        <div *ngIf=\"f.fruitType.errors\">Fruit Type is required.</div>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"varietyType\">Variety Type:</label>\n      <input\n        formControlName=\"varietyType\"\n        id=\"varietyType\"\n        type=\"text\"\n        class=\"form-control\">\n      <div *ngIf=\"f.varietyType.touched && f.varietyType.invalid\" class=\"alert alert-danger\">\n        <div *ngIf=\"f.varietyType.errors\">Variety Type is required.</div>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"quantity\">Quantity:</label>\n      <input\n        formControlName=\"quantity\"\n        id=\"quantity\"\n        type=\"number\"\n        class=\"form-control\">\n      <div *ngIf=\"f.quantity.touched && f.quantity.invalid\" class=\"alert alert-danger\">\n        <div *ngIf=\"f.quantity.errors\">Quantity is required.</div>\n      </div>\n    </div>\n\n    <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"!form.valid\">Submit</button>\n  </form>\n</div>\n"],"sourceRoot":"webpack:///"}